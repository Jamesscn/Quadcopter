public class Motor {

	//A set of constants obtained from the datasheet of the motor
	private float TorqueConstant, MotorConstant, ArmatureResistance;

	//The voltage difference, the current consumed and the torque generated by this motor
	private float voltage = 0.0F;
	private float current = 0.0F;
	private float torque = 0.0F;

	//Constructor class that is used to store all the constants
	public Motor(float torqueConstant, float motorConstant, float armatureResistance) {
		TorqueConstant = torqueConstant;
		MotorConstant = motorConstant;
		ArmatureResistance = armatureResistance;
	}

	//Update recalculates the current and torque using the motor armature model
	public void Update(float voltageDifference, float angularVelocity) {
		voltage = voltageDifference;
		current = (voltage - MotorConstant * angularVelocity) / ArmatureResistance;
		torque = TorqueConstant * current;
	}

	//Returns the current consumed by the motor
	public float GetCurrent() {
		return current;
	}

	//Returns the torque generated by the motor
	public float GetTorque() {
		return torque;
	}

	//Returns the power consumed by the motor
	public float GetPower() {
		return current * voltage;
	}

}